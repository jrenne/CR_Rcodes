indic_Euler = 1,
H_if_Euler = H)
# # Check Euler equations:
# omega_A <- matrix(0,model_sol$n.X,1)
# omega_A[which(model$names.var.X=="Cum_dc")] <- 1 # where A_t is (tilde{A} at that stage).
# prices.Atilde <- varphi(model_sol,omega.varphi = omega_A,H=H)
# plot(prices.Atilde$P.t)
expected.A <- apply(matrix(1:H,ncol=1),1,
function(h){multi.lt.fct.N(model_sol,U=omega_A,h=h)})
# Compute P and Q proba:
Price.ZC <- varphi(model_sol,omega.ZC,H = H)[[3]]
all.Probas.P <- foreach(h = 1:H, .combine=cbind) %dopar% {
probas <- fourier(model_sol,x,values.of.logA,h,
which(model_sol$names.var.X=="Cum_dc"))
probas
}
# Compute confidence intervals:
CI.P <- confidence_intervals_across_horizons(all.Probas.P,
values.of.variable = exp(values.of.logA),
nb.values.variable = nb.values.variable,
vector.of.CI = vector.of.CI)
scale.A.values <- CI.P$scale.variable.values
all.CI.P  <- CI.P$all.CI
all.pdf.P <- CI.P$all.pdf
all.cdf.P <- CI.P$all.cdf
plot(model_sol$vec_date[2:(H+1)],RF.strategy,
xlim=x.lim,ylim=y.lim, cex.main=1.5,cex.axis=1.5,cex.lab=1.5,
col="white",xlab="",ylab="",las=1,
main=panel.titles[indic.plot])
for(i in length(vector.of.CI):1){
# P
polygon(c(model_sol$vec_date[2:(H+1)],rev(model_sol$vec_date[2:(H+1)])),
c(all.CI.P[1,,i],rev(all.CI.P[2,,i])),
col=P.col,border = NA)
}
lines(model_sol$vec_date[2:(H+1)],
expected.A,lwd=2,col=P.col.line)
lines(model_sol$vec_date[2:(H+1)],RF.strategy,
lty=2,lwd=2,col="lightsteelblue4")
if(indic.plot==1){
legend("topright",
legend=c("Expected value of firm's assets","Risk-free return"),
lty=c(1,2),
col=c(P.col.line,"lightsteelblue4"),cex=1.4,
lwd=c(2,2),bty = "n")
}
}
dev.off()
stopCluster(cl)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
PD.P
PD.Q
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
PD.Q
PD.P
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
PD.P
par(mfrow=c(1,3))
par(plt=c(.25,.95,.25,.85))
xlab <- expression(bar(A))
legend.maturities
panel.titles
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,return.Eq.yearly[,indic.plot],type="l",
xlim=xlim,ylim=ylim.returns,xlab=xlab,
ylab=ifelse(indic.plot==1,types.of.plots[1],""),
lwd=2,cex.lab=1.3,main=panel.titles[indic.plot],
col=P.col.line)
legend("topleft",
legend=panel.titles,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
legend("bottomleft",
legend=c("Indebted firm","Non-indedbted firm"),
lty=c(1,1),
col=c(P.col.line,"grey"),cex=1.1,
lwd=c(2,1),bty = "n")
}
abline(h=return.Eq.yearly[1,indic.plot],lty=1,col="grey")
}else{
# Plot of expected equity return
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,return.Eq.yearly[,indic.plot],type="l",
xlim=xlim,ylim=ylim.returns,xlab=xlab,
ylab=ifelse(indic.plot==1,types.of.plots[1],""),
lwd=2,cex.lab=1.3,main=panel.titles[indic.plot],
col=P.col.line)
legend("topleft",
legend=panel.titles,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
legend("bottomleft",
legend=c("Indebted firm","Non-indedbted firm"),
lty=c(1,1),
col=c(P.col.line,"grey"),cex=1.1,
lwd=c(2,1),bty = "n")
abline(h=return.Eq.yearly[1,indic.plot],lty=1,col="grey")
}
}else{
ar(mfrow=c(1,3))
par(mfrow=c(1,3))
par(plt=c(.25,.95,.25,.85))
xlab <- expression(bar(A))
# Plot of expected equity return
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,return.Eq.yearly[,indic.plot],type="l",
xlim=xlim,ylim=ylim.returns,xlab=xlab,
ylab=ifelse(indic.plot==1,types.of.plots[1],""),
lwd=2,cex.lab=1.3,main=panel.titles[indic.plot],
col=P.col.line)
legend("topleft",
legend=panel.titles,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
legend("bottomleft",
legend=c("Indebted firm","Non-indedbted firm"),
lty=c(1,1),
col=c(P.col.line,"grey"),cex=1.1,
lwd=c(2,1),bty = "n")
abline(h=return.Eq.yearly[1,indic.plot],lty=1,col="grey")
}else{
lines(A_bar,return.Eq.yearly[,indic.plot],
lwd=2,lty=3,col=P.col.line)
}
}
legend.muAD <- NULL
for(k in 1:length(vector.of.muAD)){
eval(parse(text = gsub(" "," ",
paste("legend.muAD <- c(legend.muAD,expression(paste(mu[A*','*D],' = ',",
vector.of.muAD[k],",sep='')))",sep="")
)))
}
legend("topleft",
legend=legend.muAD,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,return.Eq.yearly[,indic.plot],type="l",
xlim=xlim,ylim=ylim.returns,xlab=xlab,
ylab=ifelse(indic.plot==1,types.of.plots[1],""),
lwd=2,cex.lab=1.3,main=panel.titles[indic.plot],
col=P.col.line)
legend("topleft",
legend=legend.muAD,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
legend("bottomleft",
legend=c("Indebted firm","Non-indedbted firm"),
lty=c(1,1),
col=c(P.col.line,"grey"),cex=1.1,
lwd=c(2,1),bty = "n")
abline(h=return.Eq.yearly[1,indic.plot],lty=1,col="grey")
}else{
lines(A_bar,return.Eq.yearly[,indic.plot],
lwd=2,lty=3,col=P.col.line)
}
}
ylim.returns <- c(.01,.09)
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,return.Eq.yearly[,indic.plot],type="l",
xlim=xlim,ylim=ylim.returns,xlab=xlab,
ylab=ifelse(indic.plot==1,types.of.plots[1],""),
lwd=2,cex.lab=1.3,main=panel.titles[indic.plot],
col=P.col.line)
legend("topleft",
legend=legend.muAD,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
legend("bottomleft",
legend=c("Indebted firm","Non-indedbted firm"),
lty=c(1,1),
col=c(P.col.line,"grey"),cex=1.1,
lwd=c(2,1),bty = "n")
abline(h=return.Eq.yearly[1,indic.plot],lty=1,col="grey")
}else{
lines(A_bar,return.Eq.yearly[,indic.plot],
lwd=2,lty=3,col=P.col.line)
}
}
model_sol$target_vector
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,return.Eq.yearly[,indic.plot],type="l",
xlim=xlim,ylim=ylim.returns,xlab=xlab,
ylab=ifelse(indic.plot==1,types.of.plots[1],""),
lwd=2,cex.lab=1.3,main=panel.titles[indic.plot],
col=P.col.line)
legend("topleft",
legend=legend.muAD,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
legend("bottomleft",
legend=c("Indebted firm","Non-indedbted firm"),
lty=c(1,1),
col=c(P.col.line,"grey"),cex=1.1,
lwd=c(2,1),bty = "n")
abline(h=return.Eq.yearly[1,indic.plot],lty=1,col="grey")
}else{
lines(A_bar,return.Eq.yearly[,indic.plot],
lwd=2,lty=3,col=P.col.line)
}
}
muAD
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,return.Eq.yearly[,indic.plot],type="l",
xlim=xlim,ylim=ylim.returns,xlab=xlab,
ylab=ifelse(indic.plot==1,types.of.plots[1],""),
lwd=2,cex.lab=1.3,main=panel.titles[indic.plot],
col=P.col.line)
legend("topleft",
legend=legend.muAD,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
legend("bottomleft",
legend=c("Indebted firm","Non-indedbted firm"),
lty=c(1,1),
col=c(P.col.line,"grey"),cex=1.1,
lwd=c(2,1),bty = "n")
abline(h=return.Eq.yearly[1,indic.plot],lty=1,col="grey")
}else{
lines(A_bar,return.Eq.yearly[,indic.plot],
lwd=2,lty=3,col=P.col.line)
}
}
types.of.plots
# Plot of PDs
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,log(PD.P[indic.h,,indic.plot]),
xlim=xlim,ylim=ylim.PD,lwd=2,type="l",
xlab=xlab,yaxt="n",
ylab="Default Proba.",
cex.lab=1.3,col="white")
values.proba.axis <- c(.001,.005,.01,.05,.1,.25,.5,1)
axis(side=2,
at=log(values.proba.axis),
labels=paste(100*values.proba.axis,"%",sep=""),las=1)
for(i in 1:length(values.proba.axis)){
abline(h=log(values.proba.axis[i]),lty=3,col="grey")
}
lines(A_bar,log(PD.P[indic.h,,indic.plot]),col=P.col.line,lwd=2)
lines(A_bar,log(PD.Q[indic.h,,indic.plot]),col=Q.col.line,lwd=2)
abline(h=0,col="grey")
legend("bottomright",
legend=c("Physical (P)","Risk-neutral (Q)"),
lty=c(1,1),
col=c(P.col.line,Q.col.line),cex=1.1,
lwd=2,bty = "n")
}else{
lines(A_bar,log(PD.P[indic.h,,indic.plot]),lwd=2,lty=3,col=P.col.line)
lines(A_bar,log(PD.Q[indic.h,,indic.plot]),col=Q.col.line,lwd=2,lty=3)
}
}
# Plot of PDs
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,log(PD.P[,indic.plot]),
xlim=xlim,ylim=ylim.PD,lwd=2,type="l",
xlab=xlab,yaxt="n",
ylab="Default Proba.",
cex.lab=1.3,col="white")
values.proba.axis <- c(.001,.005,.01,.05,.1,.25,.5,1)
axis(side=2,
at=log(values.proba.axis),
labels=paste(100*values.proba.axis,"%",sep=""),las=1)
for(i in 1:length(values.proba.axis)){
abline(h=log(values.proba.axis[i]),lty=3,col="grey")
}
lines(A_bar,log(PD.P[,indic.plot]),col=P.col.line,lwd=2)
lines(A_bar,log(PD.Q[,indic.plot]),col=Q.col.line,lwd=2)
abline(h=0,col="grey")
legend("bottomright",
legend=c("Physical (P)","Risk-neutral (Q)"),
lty=c(1,1),
col=c(P.col.line,Q.col.line),cex=1.1,
lwd=2,bty = "n")
}else{
lines(A_bar,log(PD.P[,indic.plot]),lwd=2,lty=3,col=P.col.line)
lines(A_bar,log(PD.Q[,indic.plot]),col=Q.col.line,lwd=2,lty=3)
}
}
for(indic.plot in 1:length(vector.of.muAD)){
if(indic.plot==1){
plot(A_bar,PD.Q[,indic.plot]/PD.P[,indic.plot],
lwd=2,type="l",
xlim=xlim,ylim=ylim.ratioPD,xlab=xlab,
ylab="",
cex.lab=1.3)
legend("topleft",
legend=legend.muAD,
lty=c(1,3),
col=c("black"),cex=1.1,
lwd=c(2,2),bty = "n")
}else{
lines(A_bar,PD.Q[,indic.plot]/PD.P[,indic.plot],lwd=2,lty=3)
}
}
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
return.Eq.yearly
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/estimations/load_ini_model.R", echo=TRUE)
model_sol$names.var.X
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
model_sol$vec_date[1]
H <- (x.lim[2] - model_sol$vec_date[1])/model_sol$tstep
H
(x.lim[2] - model_sol$vec_date[1])
x.lim[2]
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton2.R", echo=TRUE)
sort(c(1,4,2))
EV <- EV.fct(model_sol)
Price.ZC <- varphi(H = model_sol,matrix(0,model_sol$n:X,1),H=20)
Price.ZC <- varphi(model_sol,matrix(0,model_sol$n:X,1),H=20)
varphi()
varphi(
varphi(
varphi
Price.ZC <- varphi(model_sol,
omega.varphi=matrix(0,model_sol$n:X,1),
H=20)
model_sol$X
varphi
Price.ZC <- varphi(model_sol,
omega.varphi=matrix(0,model_sol$n:X,1),
X=model_sol$X,
H=20)
Price.ZC <- varphi(model_sol,
omega.varphi=matrix(0,model_sol$n.X,1),
H=20)
make_figure_CMT(model_sol,EV,Price.ZC,
maturities = c(2,10))
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
make_figure_CMT(model_sol,EV,Price.ZC,
maturities = c(2,10))
dev.off()
dev.off()
dev.off()
make_figure_CMT(model_sol,EV,Price.ZC,
maturities = c(2,10))
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
min(cc.1,ncc.1,ncc.mu_c.1,cc.2,ncc.2,ncc.mu_c.2)-.005
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
maturities = c(2,10)
nb = model_sol$horiz.2100+1
theta0 = list(c(log(0.17),-1/21*log(0.17)))
h_cst.1 <- maturities[1]
h_cst.2 <- maturities[2]
# Model with climate change (CC)
cc.1 <-compute_cst_h(model_sol,h_cst.1,nb)
cc.2 <-compute_cst_h(model_sol,h_cst.2,nb)
# Model without climate change risk but agent does not re-optimize
model_ncc <- model_sol
model_ncc$parameters$mu_D <- 0.0001
model_ncc$parameters$mu_H <- 0.0001
model_ncc$parameters$mu_N <- 0.0001
model_ncc$parameters$mu_T <- 0.0001
# and agents re-optimize:
model_ncc <- model_solve(model_ncc,theta0)
ncc.1 <-compute_cst_h(model_ncc,h_cst.1,nb)
ncc.2 <-compute_cst_h(model_ncc,h_cst.2,nb)
# Model without climate change risk + mu_c=E_t(delc)
model_ncc.mu_c     <- model_ncc
model_ncc.mu_c$parameters$a_D  <- 0
model_ncc.mu_c$parameters$b_D  <- 0
model_ncc.mu_c$parameters$b_sk <- 0
E_delc <- EV.fct(model_sol,h=model_sol$Tmax-1)$EX$delc
model_ncc.mu_c$mu_c<- c(model_sol$X[1],E_delc)
model_ncc.mu_c     <- model_solve(model_ncc.mu_c,theta0,indic_mitig = FALSE)
ncc.mu_c.1 <-compute_cst_h(model_ncc.mu_c,h_cst.1,nb)
ncc.mu_c.2 <-compute_cst_h(model_ncc.mu_c,h_cst.2,nb)
cc.1
cc.2
ncc.1
ncc.2
ncc.mu_c.1
ncc.mu_c.2
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/procedure/prepare.figures.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_ConstantMaturityZCB.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Housing.R", echo=TRUE)
model_sol$mu_c0
model_sol$target_vector
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Housing.R", echo=TRUE)
model_sol$target_vector
model_sol$target_vector
model_sol$target_vector[["sigma_c0"]]
model_sol$target_vector[["mu_c0"]]
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Housing.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
vector.of.muAD
model_sol$parameters$b_sk
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
muAD
model$parameters$b_sk
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
mu_A$muprice_1
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
vector.of.muAD
indic_H
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
expected.A
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
model$parameters$mu_H
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
vector.of.muAD
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
EV$VX$H
source("~/Dropbox/Research/TIBs/Rcodes_v10/estimations/load_ini_model.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/outputs/make_figures/make_figure_Merton.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
EV$VX$H
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
plots <- 5
if(indic_plots_paper==1){
source("outputs/plots_paper.R")
}
if(indic_tables_paper==1){
print("Preparing tables (about 10 seconds)")
source("outputs/tables_paper.R")
}
#####
#* To add a variable/parameter: see CHANGE
#* FILES:
#* load_ini_model (n.X, param, ...)
#* optimiz (Number of parameters FILTER)
#* Functions_General_v2 (model_solve, EV.fct, simul.function)
#* Functions_Optim (Param2Model, Model2Param)
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/Rcodes_v10/main.R", echo=TRUE)
source("~/Dropbox/Research/HistRealRates/Codes/rcode_Inflation_Exp_Kalman.R", echo=TRUE)
