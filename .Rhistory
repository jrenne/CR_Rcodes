#*New approximation of the radiative forcings (linear)
#*nb.simul is number of periods for 1 simulation \in(1,99)
#*nb.traj is the number of simulations done for nb.simul periods
#*for t>99, time-independent matrices
simul.function<-function(model_sol,,nb.traj){
nb.simul.t
nb.traj
nb.simul<-nb.simul.t+1 #take into account t=0
tstep<-model_sol$tstep
t    <-1:nb.simul
param<-model_sol$parameters
if(nb.simul>model_sol$Tmax){
omega0<-model_sol$omega0
inf   <-rep(list(model_sol$omega0.inf),nb.simul-model_sol$Tmax)
omega0<-c(omega0,inf)
omega <-model_sol$omega
inf   <-rep(list(model_sol$omega.inf),nb.simul-model_sol$Tmax)
omega <-c(omega,inf)
A1    <-model_sol$A1
inf   <-rep(list(model_sol$A1.inf),nb.simul-model_sol$Tmax)
A1    <-c(A1,inf)
}else{
omega0<-model_sol$omega0
omega <-model_sol$omega
A1    <-model_sol$A1
}
#Shocks
eta  <- matrix(0, nrow=model_sol$n.eta, ncol=nb.traj)
D    <- matrix(0, nrow=nb.simul, ncol=nb.traj)
N    <- matrix(0, nrow=nb.simul, ncol=nb.traj)
T_at <- matrix(0, nrow=nb.simul, ncol=nb.traj)
HW   <- matrix(0, nrow=nb.simul, ncol=nb.traj)
# Create indicators of position of variables (Variables in Z):
for(i in 1:model$n.Z){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')",sep=""))))}
# Create indicators of position of variables (Variables in W):
for(i in (model$n.Z+1):(model$n.Z+model$n.W)){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')-model$n.Z",sep=""))))}
##endogenous equations
#Initial conditions
delc   <- model_sol$X[indic.delc]
y_tilde<- model_sol$X[indic.y_tilde]
E      <- model_sol$X[indic.E]
E_ind  <- model_sol$X[indic.E_ind]
Forc   <- model_sol$X[indic.Forc]
M_at   <- model_sol$X[indic.M_at]
M_up   <- model_sol$X[indic.M_up]
M_lo   <- model_sol$X[indic.M_lo]
T_lo   <- model_sol$X[indic.T_lo]
Cum_D  <- model_sol$X[indic.Cum_D]
Cum_E  <- model_sol$X[indic.Cum_E]
Cum_dc <- model_sol$X[indic.Cum_dc]
H      <- model_sol$X[indic.H]
Z<-list(matrix(
rep(c(delc,y_tilde,E,E_ind,Forc,M_at,M_up,M_lo,T_lo,Cum_D,Cum_E,Cum_dc,H),
nb.traj),
model_sol$n.Z,nb.traj))
Z[[nb.simul+1]] <- D
Z[[nb.simul+2]] <- N
Z[[nb.simul+3]] <- T_at
Z[[nb.simul+4]] <- HW
X <- list(model_sol$X)
for (i in 2:nb.simul) {
#Shocks
Z[[nb.simul+1]][i,]    <-
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D[1:model_sol$n.Z,drop=FALSE])%*%
Z[[i-1]])),scale=param$mu_D)
Z[[nb.simul+2]][i,]    <-
rgamma(nb.traj,rpois(nb.traj,pmax(0,param$kappa_N^(i-1)*
(param$a_N/param$mu_N+
t(model_sol$ell1.N[1:model_sol$n.Z,drop=FALSE])%*%
Z[[i-1]]))),scale=param$mu_N)
Z[[nb.simul+3]][i,]    <-
rgamma(nb.traj,rpois(nb.traj,pmax(0,0+
t(model_sol$ell1.T[1:model_sol$n.Z,drop=FALSE])%*%
Z[[i-1]])),scale=param$mu_T)
Z[[nb.simul+4]][i,]    <-
rgamma(nb.traj,rpois(nb.traj,pmax(0,param$a_H/param$mu_H+
t(model_sol$ell1.H[1:model_sol$n.Z,drop=FALSE])%*%
Z[[i-1]])),scale=param$mu_H)
eta[1:model_sol$n.eta,]<-apply(eta,2,function(i)param$Phi%*%i)+
rnorm(model_sol$n.eta*nb.traj)
W                      <-rbind(eta,
Z[[nb.simul+1]][i,],
Z[[nb.simul+2]][i,],
Z[[nb.simul+3]][i,],
Z[[nb.simul+4]][i,])
#Climate variables
Z_1.0  <- apply(Z[[i-1]],2,
function(x){A1[[i-1]]%*%x+omega0[[i-1]]})
Wz     <- apply(W,2,function(x){omega[[i-1]]%*%x})
Z[[i]] <- Z_1.0+Wz
X[[i]] <- rbind(Z[[i]],W)
}
Z[[nb.simul+1]]
param$a_D
model_sol$ell1.D
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
model_sol$vector.ini$ini_Tat
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
model_sol$ell1.D[1:model_sol$n.Z,drop=FALSE])
model_sol$ell1.D[1:model_sol$n.Z,drop=FALSE]
model_sol$ell1.D
Z<-list(matrix(
rep(c(delc,y_tilde,E,E_ind,Forc,M_at,M_up,M_lo,T_lo,Cum_D,Cum_E,Cum_dc,H),
nb.traj),
model_sol$n.Z,nb.traj))
Z[[i-1]]
nb.simul<-nb.simul.t+1 #take into account t=0
tstep<-model_sol$tstep
t    <-1:nb.simul
param<-model_sol$parameters
if(nb.simul>model_sol$Tmax){
omega0<-model_sol$omega0
inf   <-rep(list(model_sol$omega0.inf),nb.simul-model_sol$Tmax)
omega0<-c(omega0,inf)
omega <-model_sol$omega
inf   <-rep(list(model_sol$omega.inf),nb.simul-model_sol$Tmax)
omega <-c(omega,inf)
A1    <-model_sol$A1
inf   <-rep(list(model_sol$A1.inf),nb.simul-model_sol$Tmax)
A1    <-c(A1,inf)
}else{
omega0<-model_sol$omega0
omega <-model_sol$omega
A1    <-model_sol$A1
}
#Shocks
eta  <- matrix(0, nrow=model_sol$n.eta, ncol=nb.traj)
D    <- matrix(0, nrow=nb.simul, ncol=nb.traj)
N    <- matrix(0, nrow=nb.simul, ncol=nb.traj)
T_at <- matrix(model_sol$vector.ini$ini_Tat, nrow=nb.simul, ncol=nb.traj)
HW   <- matrix(0, nrow=nb.simul, ncol=nb.traj)
# Create indicators of position of variables (Variables in Z):
for(i in 1:model$n.Z){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')",sep=""))))}
# Create indicators of position of variables (Variables in W):
for(i in (model$n.Z+1):(model$n.Z+model$n.W)){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')-model$n.Z",sep=""))))}
##endogenous equations
#Initial conditions
delc   <- model_sol$X[indic.delc]
y_tilde<- model_sol$X[indic.y_tilde]
E      <- model_sol$X[indic.E]
E_ind  <- model_sol$X[indic.E_ind]
Forc   <- model_sol$X[indic.Forc]
M_at   <- model_sol$X[indic.M_at]
M_up   <- model_sol$X[indic.M_up]
M_lo   <- model_sol$X[indic.M_lo]
T_lo   <- model_sol$X[indic.T_lo]
Cum_D  <- model_sol$X[indic.Cum_D]
Cum_E  <- model_sol$X[indic.Cum_E]
Cum_dc <- model_sol$X[indic.Cum_dc]
H      <- model_sol$X[indic.H]
Z<-list(matrix(
rep(c(delc,y_tilde,E,E_ind,Forc,M_at,M_up,M_lo,T_lo,Cum_D,Cum_E,Cum_dc,H),
nb.traj),
model_sol$n.Z,nb.traj))
Z[[nb.simul+1]] <- D
Z[[nb.simul+2]] <- N
Z[[nb.simul+3]] <- T_at
Z[[nb.simul+4]] <- HW
X <- list(model_sol$X)
for (i in 2:nb.simul) {
#Shocks
Z[[nb.simul+1]][i,]    <-
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D[1:model_sol$n.Z,drop=FALSE])%*%
Z[[i-1]])),scale=param$mu_D)
stop()
Z[[i-1]]
}
Z[[i-1]]
delc
W<-list(matrix(
rep(c(eta,D,N,T_at,HW),
nb.traj),
model_sol$n.W,nb.traj))
model_sol$n.W
eta
D
W<-list(matrix(
rep(c(rep(0,model_sol$n.eta),0,0,model_sol$vector.ini$ini_Tat,0),
nb.traj),
model_sol$n.W,nb.traj))
Z[[nb.simul+1]][i,]    <-
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
cbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
Z[[1]]
Z[[2]]
rep(c(delc,y_tilde,E,E_ind,Forc,M_at,M_up,M_lo,T_lo,Cum_D,Cum_E,Cum_dc,H),
nb.traj),
matrix(
rep(c(delc,y_tilde,E,E_ind,Forc,M_at,M_up,M_lo,T_lo,Cum_D,Cum_E,Cum_dc,H),
nb.traj),
model_sol$n.Z,nb.traj)
model_sol$X
# Create indicators of position of variables (Variables in Z):
for(i in 1:model$n.Z){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')",sep=""))))}
# Create indicators of position of variables (Variables in W):
for(i in (model$n.Z+1):(model$n.Z+model$n.W)){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')-model$n.Z",sep=""))))}
n.Z <- model_sol$n.Z
n.W <- model_sol$n.W
n.X <- model_sol$n.X
Z<-list(matrix(model_sol$X[1:n.Z],
model_sol$n.Z,nb.traj))
Z
W[[i]] <- matrix(0,n.W,nb.traj)
W[[i]][1,] <-
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
cbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
i
i <- 2
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
cbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
W[[i-1]]
cbind(Z[[i-1]],W[[i-1]])
Z[[i-1]]
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
W[[i-1]]
model_sol$ell1.D
param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]])
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
indic.delc
indic.y_tilde
indic.E
indic.E_ind
indic.H
indic.D
indic.N
indic.T_at
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
nb.simul.t
nb.simul<-nb.simul.t+1 #take into account t=0
tstep<-model_sol$tstep
t    <-1:nb.simul
param<-model_sol$parameters
n.Z   <- model_sol$n.Z
n.W   <- model_sol$n.W
n.X   <- model_sol$n.X
n.eta <- model_sol$n.eta
if(nb.simul>model_sol$Tmax){
omega0<-model_sol$omega0
inf   <-rep(list(model_sol$omega0.inf),nb.simul-model_sol$Tmax)
omega0<-c(omega0,inf)
omega <-model_sol$omega
inf   <-rep(list(model_sol$omega.inf),nb.simul-model_sol$Tmax)
omega <-c(omega,inf)
A1    <-model_sol$A1
inf   <-rep(list(model_sol$A1.inf),nb.simul-model_sol$Tmax)
A1    <-c(A1,inf)
}else{
omega0<-model_sol$omega0
omega <-model_sol$omega
A1    <-model_sol$A1
}
eta <- matrix(0,n.eta,1)
# Create indicators of position of variables (Variables in Z):
for(i in 1:model$n.Z){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')",sep=""))))}
# Create indicators of position of variables (Variables in W):
for(i in (model$n.Z+1):(model$n.Z+model$n.W)){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')-model$n.Z",sep=""))))}
Z <- list(matrix(model_sol$X[1:n.Z],n.Z,nb.traj))
W <- list(matrix(model_sol$X[1:n.Z],n.W,nb.traj))
for (i in 2:nb.simul) {
W[[i]] <- matrix(0,n.W,nb.traj)
eta <- param$Phi %*% eta + matrix(rnorm(n.eta * nb.traj),n.eta,nb.traj)
W[[i]][1:n.eta,] <- eta
W[[i]][(nb.eta+1),] <-
rgamma(nb.traj,rpois(nb.traj,
pmax(0,param$a_D/param$mu_D+
t(model_sol$ell1.D)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_D)
W[[i]][(nb.eta+2),] <-
rgamma(nb.traj,rpois(nb.traj,pmax(0,param$kappa_N^(i-1)*
param$a_N/param$mu_N+
t(model_sol$ell1.N)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_N)
W[[i]][(nb.eta+3),] <-
rgamma(nb.traj,rpois(nb.traj,pmax(0,0+
t(model_sol$ell1.T)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_T)
W[[i]][(nb.eta+4),] <-
rgamma(nb.traj,rpois(nb.traj,pmax(0,param$a_H/param$mu_H+
t(model_sol$ell1.H)%*%
rbind(Z[[i-1]],W[[i-1]]))),scale=param$mu_H)
#Climate variables
Z_1.0  <- apply(Z[[i-1]],2,
function(x){A1[[i-1]]%*%x+omega0[[i-1]]})
Wz     <- apply(W[[i]],2,function(x){omega[[i-1]]%*%x})
Z[[i]] <- Z_1.0+Wz
X[[i]] <- rbind(Z[[i]],W[[i]])
}
param$Phi
eta
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
simul_d$D
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
Cum_D
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
dev.off()
dev.off()
dev.off()
dev.off()
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
simD
apply(simD,2,mean)
ED
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
debugSource("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
W
W
W
model_sol$ell1.N
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
model_sol$ell1.T
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
apply(simD,2,mean)
ED
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
apply(simD,2,mean)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
dim(simD)
apply(simD,1,mean)
ED
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
apply(simD,1,mean)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
apply(simD,1,mean)
cbind(apply(simD,1,mean),ED)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
cbind(apply(simD,1,mean),ED)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
cbind(apply(simD,1,mean),ED)
cbind(apply(simN,1,mean),EN)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
cbind(apply(simN,1,mean),EN)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
cbind(apply(simN,1,mean),EN)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
model_sol$names.var.X
EV$EX$E
plot(EV$EX$E)
plot(EV$EX$Cum_E)
plot(cumsum(EV$EX$E))
plot(EV$EX$Cum_E)
plot(cumsum(EV$EX$E))
plot(cumsum(EV$EX$E)+model_sol$vector.ini$ini_E)
plot(EV$EX$Cum_E)
plot(cumsum(EV$EX$E)+model_sol$vector.ini$ini_E)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("outputs/plots_paper.R")
print("Preparing tables (couple of minutes)")
source("outputs/tables_paper.R")
plot(EV$EX$E)
lines(sqrt(EV$VX$E))
plot(cumsum(EV$EX$E)+model_sol$vector.ini$ini_E)
plot(EV$EX$Cum_E)
plot(cumsum(EV$EX$E)+model_sol$vector.ini$ini_E)
indic_D
n.eta
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
simul_d <-simul.function(model_sol,nb.simul,nb)
nb.simul.t <- nb.simul
nb.traj <- 12
#useful parameters
nb.simul<-nb.simul.t+1 #take into account t=0
tstep<-model_sol$tstep
t    <-1:nb.simul
param<-model_sol$parameters
n.Z   <- model_sol$n.Z
n.W   <- model_sol$n.W
n.X   <- model_sol$n.X
n.eta <- model_sol$n.eta
if(nb.simul>model_sol$Tmax){
omega0<-model_sol$omega0
inf   <-rep(list(model_sol$omega0.inf),nb.simul-model_sol$Tmax)
omega0<-c(omega0,inf)
omega <-model_sol$omega
inf   <-rep(list(model_sol$omega.inf),nb.simul-model_sol$Tmax)
omega <-c(omega,inf)
A1    <-model_sol$A1
inf   <-rep(list(model_sol$A1.inf),nb.simul-model_sol$Tmax)
A1    <-c(A1,inf)
}else{
omega0<-model_sol$omega0
omega <-model_sol$omega
A1    <-model_sol$A1
}
eta <- matrix(0,n.eta,nb.traj)
# Create indicators of position of variables (Variables in Z):
for(i in 1:model$n.Z){
eval(parse(text = gsub(" "," ",
paste("indic.",model$names.var.X[i],
"<- which(model$names.var.X=='",model$names.var.X[i],
"')",sep=""))))}
source("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Dsimul.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
debugSource("~/Dropbox/Research/TIBs/CR_Rcodes/procedures/functions_general.R", echo=TRUE)
model_sol <- model_solve(model,indic_CRRA = FALSE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/estimations/load_ini_model.R", echo=TRUE)
muu1_ini
RES.fixed.point$mu_u1
model_sol <- model_solve(model,indic_CRRA = FALSE)
model
model_sol <- model_solve(model,indic_CRRA = FALSE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/estimations/load_ini_model.R", echo=TRUE)
model_sol <- model_solve(model,indic_CRRA = FALSE)
mu_u1_save <- model_sol$mu_u1
mu_u1_save
