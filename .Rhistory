U <- list(Uh[,H,drop=F])
if((t+H)>(model_sol$Tmax-1)){
a.h <- matrix(c(a1.fct.inf(model_sol,U[[1]]),rep(NaN,H-1)),H,1)
i   <- 1
#as long as t+H-i is larger than 98=max(a1/b1), we stay time-indep
while((t+H-i)>(model_sol$Tmax-2)&i<H){
U[[i+1]] <- Uh[,H-i,drop=F] + b1.fct.inf(model_sol,U[[i]])
a.h[i+1] <- a1.fct.inf(model_sol,U[[i+1]])
i<-i+1
}
if(i<=(H-1)){
for (k in i:(H-1)){
U[[k+1]] <- Uh[,H-k,drop=F] + b1.fct(model_sol,U[[k]],t+H-k)
a.h[k+1] <- a1.fct(model_sol,U[[k+1]],t+H-(k+1))
}
}
}else{
a.h <- matrix(c(a1.fct(model_sol,U[[1]],t+H-1),rep(NaN,H-1)),H,1)
if(H>1){
for (k in 1:(H-1)){
U[[k+1]] <- Uh[,H-k,drop=F] + b1.fct(model_sol,U[[k]],t+H-k)
a.h[k+1] <- a1.fct(model_sol,U[[k+1]],t+H-(k+1))
}
}
}
a.h <- matrix(c(a1.fct.inf(model_sol,U[[1]]),rep(NaN,H-1)),H,1)
U[[1]]
H
a1.fct.inf(model_sol,U[[1]])
Uh
H <- dim(Uh)[2]
H
list(Uh[,H,drop=F])
omega.0.inf <- model_sol$omega0.inf
omega.inf   <- model_sol$omega.inf
Uz <- matrix(U[1:model_sol$n.Z,],model_sol$n.Z,dim(U)[2])
dim(U)[2]
if((t+H)>(model_sol$Tmax-1)){
a.h <- matrix(c(a1.fct.inf(model_sol,U[[1]]),rep(NaN,H-1)),H,1)
i   <- 1
#as long as t+H-i is larger than 98=max(a1/b1), we stay time-indep
while((t+H-i)>(model_sol$Tmax-2)&i<H){
U[[i+1]] <- Uh[,H-i,drop=F] + b1.fct.inf(model_sol,U[[i]])
a.h[i+1] <- a1.fct.inf(model_sol,U[[i+1]])
i<-i+1
}
if(i<=(H-1)){
for (k in i:(H-1)){
U[[k+1]] <- Uh[,H-k,drop=F] + b1.fct(model_sol,U[[k]],t+H-k)
a.h[k+1] <- a1.fct(model_sol,U[[k+1]],t+H-(k+1))
}
}
}else{
a.h <- matrix(c(a1.fct(model_sol,U[[1]],t+H-1),rep(NaN,H-1)),H,1)
if(H>1){
for (k in 1:(H-1)){
U[[k+1]] <- Uh[,H-k,drop=F] + b1.fct(model_sol,U[[k]],t+H-k)
a.h[k+1] <- a1.fct(model_sol,U[[k+1]],t+H-(k+1))
}
}
}
t+H
a.h <- matrix(c(a1.fct(model_sol,U[[1]],t+H-1),rep(NaN,H-1)),H,1)
U[[1]]
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Tpdf.R", echo=TRUE)
# Maturity:
H <-model_sol$horiz.2100                                                        #maturity 2100
EV<-EV.fct(model_sol,H)
#Pricing
omega_ZCB  <- model_sol$omega_ZCB
omega_T.at <- model_sol$omega_T.at
a <- omega_T.at                                                                 #Options related to T_at in X
b <- 2                                                                          #Options pay when a'X < b
# Miscellaneous
n.date<-model_sol$Tmax
# Quantiles considered for pdf charts:
vector.of.CI <- c(0.5,0.8,0.9,0.95)
# Colors:
P.col.line <- brocolors("crayons")["Teal Blue"]
P.col<-adjustcolor( P.col.line, alpha.f = 0.15)
Q.col.line <- brocolors("crayons")["Mango Tango"]
Q.col<-adjustcolor( Q.col.line, alpha.f = 0.15)
# Nb of values used for refined grid when computing Conf Intervals:
nb.values.variable <- 400
print("Preparing Calibration plot")
source("outputs/make_figures/make_figure_calibration.R")
print("Preparing figure illustrating Gamma-zero distribution")
source("outputs/make_figures/make_figure_Damage_comparison.R",
encoding = 'ISO8859-1')
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
# CDICE: -----------------------------------------------------------------------
for(dt in c(1,5)){
MATeq <- 851
MUOeq <- 628
MLOeq <- 1323
#MATeq <- model_sol$vector.ini$ini_Mat + 00
#MUOeq <- model_sol$vector.ini$ini_Mup
#MLOeq <- model_sol$vector.ini$ini_Mlo
r1 <- MATeq/MUOeq
r2 <- MUOeq/MLOeq
b12 <- 0.054
b11 <- - b12
b23 <- 0.0082
b13 <- 0
b21 <- b12 * r1
b22 <- - b21 - b23
b31 <- 0
b32 <- b23 * r2
b33 <- - b32
B <- matrix(c(b11,b12,b13,b21,b22,b23,b31,b32,b33),3,3)
c1 <- .137
c3 <- .73
c4 <- .00689
lambda <- 1.06
F2XCO2 <- 3.45
shock <- c(1,0,0)
dates <- seq(2030,2300,by=dt)
all.M <- NULL
all.F <- NULL
all.TAT <- NULL
all.TLO <- NULL
all.M.shock <- NULL
all.F.shock <- NULL
all.TAT.shock <- NULL
all.TLO.shock <- NULL
for(y in dates){
if(y==dates[1]){
M <- matrix(c(MATeq,
MUOeq,MLOeq),ncol=1)
M.shock <- matrix(c(MATeq+1,
MUOeq,MLOeq),ncol=1)
TAT <- model$vector.ini$ini_Tat
TLO <- model$vector.ini$ini_Tlo
TAT.shock <- model$vector.ini$ini_Tat
TLO.shock <- model$vector.ini$ini_Tlo
}else{
M <- (diag(3) + dt*B) %*% M
M.shock <- (diag(3) + dt*B) %*% M.shock
}
F <- F2XCO2 * log(M[1]/MATeq)/log(2)
F.shock <- F2XCO2 * log(M.shock[1]/MATeq)/log(2)
all.M         <- cbind(all.M,M)
all.F         <- cbind(all.F,F)
all.TAT       <- cbind(all.TAT,TAT)
all.TLO       <- cbind(all.TLO,TLO)
all.M.shock   <- cbind(all.M.shock,M.shock)
all.F.shock   <- cbind(all.F.shock,F.shock)
all.TAT.shock <- cbind(all.TAT.shock,TAT.shock)
all.TLO.shock <- cbind(all.TLO.shock,TLO.shock)
TAT_1 <- TAT # to be used un TLO
TAT <- TAT + c1*dt * (F - lambda * TAT - c3 * (TAT - TLO))
TLO <- TLO + c4*dt * (TAT_1 - TLO)
TAT.shock_1 <- TAT.shock # to be used un TLO
TAT.shock   <- TAT.shock + c1*dt * (F.shock - lambda * TAT.shock -
c3 * (TAT.shock - TLO.shock))
TLO.shock <- TLO.shock + c4*dt * (TAT.shock_1 - TLO.shock)
}
if(dt==1){
IRF_CDICE.dt1 <- all.TAT.shock - all.TAT
IRF_CDICE.dt1_dates <- dates
}
if(dt==5){
IRF_CDICE.dt5 <- all.TAT.shock - all.TAT
IRF_CDICE.dt5_dates <- dates
}
}
# ------------------------------------------------------------------------------
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
# CR: -----------------------------------------------------------------------
values_iniMat <- c(model_sol$vector.ini$ini_Mat,1800)
for(largeMat in c(TRUE,FALSE)){
for(indic_lineariz in c(TRUE,FALSE)){
for(dt in c(1,5)){
MATeq <- ifelse(largeMat,values_iniMat[2],values_iniMat[1])
MUOeq <- model_sol$vector.ini$ini_Mup
MLOeq <- model_sol$vector.ini$ini_Mlo
ksi1 <- model_sol$parameters$xi_1
ksi2 <- model_sol$parameters$xi_2
ksi3 <- model_sol$parameters$xi_3
tau  <- model_sol$parameters$tau
nu   <- model_sol$parameters$nu
shock <- c(1,0,0)
dates <- seq(2030,2300,by=dt)
all.M <- NULL
all.F <- NULL
all.TAT <- NULL
all.TLO <- NULL
all.M.shock <- NULL
all.F.shock <- NULL
all.TAT.shock <- NULL
all.TLO.shock <- NULL
for(y in dates){
if(y==dates[1]){
M <- matrix(c(MATeq,
MUOeq,MLOeq),ncol=1)
M.shock <- matrix(c(MATeq+1,
MUOeq,MLOeq),ncol=1)
TAT <- model$vector.ini$ini_Tat
TLO <- model$vector.ini$ini_Tlo
TAT.shock <- model$vector.ini$ini_Tat
TLO.shock <- model$vector.ini$ini_Tlo
}else{
M <- (model_sol$varphi%^%dt) %*% M
M.shock <- (model_sol$varphi%^%dt) %*% M.shock
}
if(indic_lineariz){
F <- tau/model_sol$parameters$m0/log(2)/model_sol$parameters$m_pi *
M[1]
F.shock <- tau/model_sol$parameters$m0/log(2)/model_sol$parameters$m_pi *
M.shock[1]
}else{
F <- tau * log(M[1]/MATeq)/log(2)
F.shock <- tau * log(M.shock[1]/MATeq)/log(2)
}
all.M         <- cbind(all.M,M)
all.F         <- cbind(all.F,F)
all.TAT       <- cbind(all.TAT,TAT)
all.TLO       <- cbind(all.TLO,TLO)
all.M.shock   <- cbind(all.M.shock,M.shock)
all.F.shock   <- cbind(all.F.shock,F.shock)
all.TAT.shock <- cbind(all.TAT.shock,TAT.shock)
all.TLO.shock <- cbind(all.TLO.shock,TLO.shock)
TAT <- TAT + ksi1*dt * (F - tau/nu * TAT - ksi2 * (TAT - TLO))
TLO <- TLO + ksi3*dt * (TAT - TLO)
TAT.shock   <- TAT.shock + ksi1*dt * (F.shock - tau/nu * TAT.shock -
ksi2 * (TAT.shock - TLO.shock))
TLO.shock <- TLO.shock + ksi3*dt * (TAT.shock - TLO.shock)
}
if((dt==1)&indic_lineariz&!largeMat){
IRF_CR.linear.dt1 <- all.TAT.shock - all.TAT
IRF_CR.linear.dt1_dates <- dates
}
if((dt==5)&indic_lineariz&!largeMat){
IRF_CR.linear.dt5 <- all.TAT.shock - all.TAT
IRF_CR.linear.dt5_dates <- dates
}
if((dt==1)&!indic_lineariz&!largeMat){
IRF_CR.nonlinear.dt1 <- all.TAT.shock - all.TAT
IRF_CR.nonlinear.dt1_dates <- dates
}
if((dt==5)&!indic_lineariz&!largeMat){
IRF_CR.nonlinear.dt5 <- all.TAT.shock - all.TAT
IRF_CR.nonlinear.dt5_dates <- dates
}
if((dt==1)&indic_lineariz&largeMat){
IRF_CR.linear.largeMat.dt1 <- all.TAT.shock - all.TAT
IRF_CR.linear.largeMat.dt1_dates <- dates
}
if((dt==5)&indic_lineariz&largeMat){
IRF_CR.linear.largeMat.dt5 <- all.TAT.shock - all.TAT
IRF_CR.linear.largeMat.dt5_dates <- dates
}
if((dt==1)&!indic_lineariz&largeMat){
IRF_CR.nonlinear.largeMat.dt1 <- all.TAT.shock - all.TAT
IRF_CR.nonlinear.largeMat.dt1_dates <- dates
}
if((dt==5)&!indic_lineariz&largeMat){
IRF_CR.nonlinear.largeMat.dt5 <- all.TAT.shock - all.TAT
IRF_CR.nonlinear.largeMat.dt5_dates <- dates
}
}
}
}
# ------------------------------------------------------------------------------
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
values_iniMat <- c(model_sol$vector.ini$ini_Mat,1800)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R")
source("make_figure_YC_RF.R")
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
for(largeMat in c(TRUE,FALSE)){
for(indic_lineariz in c(TRUE,FALSE)){
for(dt in c(1,5)){
MATeq <- ifelse(largeMat,values_iniMat[2],values_iniMat[1])
MUOeq <- model_sol$vector.ini$ini_Mup
MLOeq <- model_sol$vector.ini$ini_Mlo
ksi1 <- model_sol$parameters$xi_1
ksi2 <- model_sol$parameters$xi_2
ksi3 <- model_sol$parameters$xi_3
tau  <- model_sol$parameters$tau
nu   <- model_sol$parameters$nu
shock <- c(1,0,0)
dates <- seq(2030,2300,by=dt)
all.M <- NULL
all.F <- NULL
all.TAT <- NULL
all.TLO <- NULL
all.M.shock <- NULL
all.F.shock <- NULL
all.TAT.shock <- NULL
all.TLO.shock <- NULL
for(y in dates){
if(y==dates[1]){
M <- matrix(c(MATeq,
MUOeq,MLOeq),ncol=1)
M.shock <- matrix(c(MATeq+1,
MUOeq,MLOeq),ncol=1)
TAT <- model$vector.ini$ini_Tat
TLO <- model$vector.ini$ini_Tlo
TAT.shock <- model$vector.ini$ini_Tat
TLO.shock <- model$vector.ini$ini_Tlo
}else{
M <- (model_sol$varphi%^%dt) %*% M
M.shock <- (model_sol$varphi%^%dt) %*% M.shock
}
if(indic_lineariz){
F <- tau/model_sol$parameters$m0/log(2)/model_sol$parameters$m_pi *
M[1]
F.shock <- tau/model_sol$parameters$m0/log(2)/model_sol$parameters$m_pi *
M.shock[1]
}else{
F <- tau * log(M[1]/MATeq)/log(2)
F.shock <- tau * log(M.shock[1]/MATeq)/log(2)
}
all.M         <- cbind(all.M,M)
all.F         <- cbind(all.F,F)
all.TAT       <- cbind(all.TAT,TAT)
all.TLO       <- cbind(all.TLO,TLO)
all.M.shock   <- cbind(all.M.shock,M.shock)
all.F.shock   <- cbind(all.F.shock,F.shock)
all.TAT.shock <- cbind(all.TAT.shock,TAT.shock)
all.TLO.shock <- cbind(all.TLO.shock,TLO.shock)
TAT <- TAT + ksi1*dt * (F - tau/nu * TAT - ksi2 * (TAT - TLO))
TLO <- TLO + ksi3*dt * (TAT - TLO)
TAT.shock   <- TAT.shock + ksi1*dt * (F.shock - tau/nu * TAT.shock -
ksi2 * (TAT.shock - TLO.shock))
TLO.shock <- TLO.shock + ksi3*dt * (TAT.shock - TLO.shock)
}
if((dt==1)&indic_lineariz&!largeMat){
IRF_CR.linear.dt1 <- all.TAT.shock - all.TAT
IRF_CR.linear.dt1_dates <- dates
}
if((dt==5)&indic_lineariz&!largeMat){
IRF_CR.linear.dt5 <- all.TAT.shock - all.TAT
IRF_CR.linear.dt5_dates <- dates
}
if((dt==1)&!indic_lineariz&!largeMat){
IRF_CR.nonlinear.dt1 <- all.TAT.shock - all.TAT
IRF_CR.nonlinear.dt1_dates <- dates
}
if((dt==5)&!indic_lineariz&!largeMat){
IRF_CR.nonlinear.dt5 <- all.TAT.shock - all.TAT
IRF_CR.nonlinear.dt5_dates <- dates
}
if((dt==1)&indic_lineariz&largeMat){
IRF_CR.linear.largeMat.dt1 <- all.TAT.shock - all.TAT
IRF_CR.linear.largeMat.dt1_dates <- dates
}
if((dt==5)&indic_lineariz&largeMat){
IRF_CR.linear.largeMat.dt5 <- all.TAT.shock - all.TAT
IRF_CR.linear.largeMat.dt5_dates <- dates
}
if((dt==1)&!indic_lineariz&largeMat){
IRF_CR.nonlinear.largeMat.dt1 <- all.TAT.shock - all.TAT
IRF_CR.nonlinear.largeMat.dt1_dates <- dates
}
if((dt==5)&!indic_lineariz&largeMat){
IRF_CR.nonlinear.largeMat.dt5 <- all.TAT.shock - all.TAT
IRF_CR.nonlinear.largeMat.dt5_dates <- dates
}
}
}
}
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
Price.ZC <- varphi(model_sol,
omega.varphi=omega_ZCB,
H = H/model_sol$tstep)
source("~/Dropbox/Research/TIBs/CR_Rcodes/main.R", echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_IRF100Gt.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/make_figure_YC_RF.R", encoding = 'ISO8859-1', echo=TRUE)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_Damage_comparison.R", echo=TRUE)
ACE_Traeger_2023 <- read.csv("~/Dropbox/Research/TIBs/CR_Rcodes/data/ACE_Traeger_2023.csv")
View(ACE_Traeger_2023)
data_ACE <- read.csv("data/ACE_Traeger_2023.csv")
plot(data_ACE$prpp,data_ACE$SCC)
model_new <- model
model_new$parameters$delta
model_new$parameters$delta <- (1 - .005)^5
model_new$parameters$delta
model_new <- model
model_new$parameters$delta <- (1 - .005)^5
model_new <- solveParam4T(model_new)
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
all_rho <- c(.005,.01,.015)
all_scc <- NULL
for(rho in all_rho){
model_new <- model
model_new$parameters$delta <- (1 - rho)^5
model_new <- solveParam4T(model_new)
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
all_scc <- c(all_scc,scc.fct(model_new_sol,0))
}
plot(data_ACE$prpp,data_ACE$SCC)
points(all_rho,all_scc,pch=15,col="red")
all_scc
model$parameters$rho
model$parameters$gamma
scc.fct(model_new_sol,0)
model_new$parameters$gamma
model_new$parameters$gamma <- 4
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
model_new$parameters$gamma <- 3
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
model_new$parameters$a_N <- 0
model_new$parameters$b_N <- 0
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
source("~/Dropbox/Research/TIBs/CR_Rcodes/outputs/make_figures/make_figure_compar_SCC_Traeger.R", echo=TRUE)
plot(data_ACE$prpp,data_ACE$SCC)
points(all_rho,all_scc,pch=15,col="red")
points(all_rho,log(all_scc),pch=15,col="red")
plot(data_ACE$prpp,log(data_ACE$SCC))
points(all_rho,log(all_scc),pch=15,col="red")
all_scc
model_new$parameters$a_N
model_new$parameters$a_D
model_new$parameters$b_D
scc.fct(model_new_sol,0)
model_new$parameters$a_D <- model_new$parameters$a_D/2
model_new$parameters$b_D <- model_new$parameters$b_D/2
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
model_new$parameters$a_N <- 0
model_new$parameters$b_N <- 0
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
rho
rho <- .001
model_new$parameters$delta <- (1 - rho)^5
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
model_new$parameters$b_N
model_new$parameters$a_N
model_new <- model
model_new$parameters$delta <- (1 - rho)^5
model_new$parameters$b_D <- model_new$parameters$b_D/3
model_new$parameters$a_D <- model_new$parameters$a_D/3
model_new$parameters$b_N <- 0
model_new$parameters$a_N <- 0
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
model_new$parameters$gamma
model_new$parameters$gamma <- 3
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
model_new$target_vector
model_new <- model
model_new$parameters$delta <- (1 - rho)^5
model_new <- solveParam4c(model_new)
model_new <- solveParam4T(model_new)
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
model_new$target_vector["mu_c0"] <- .1
model_new$parameters$delta <- (1 - rho)^5
model_new <- solveParam4c(model_new)
model_new <- solveParam4T(model_new)
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
model_new <- model
model_new$target_vector["mu_c0"] <- .1
model_new$parameters$delta <- (1 - rho)^5
model_new <- solveParam4c(model_new)
model_new <- solveParam4T(model_new)
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
rho
model_new <- model
model_new$target_vector["mu_c0"] <- .2
model_new$parameters$delta <- (1 - rho)^5
model_new <- solveParam4c(model_new)
model_new <- solveParam4T(model_new)
model_new_sol <- model_solve(model_new,indic_CRRA = FALSE)
scc.fct(model_new_sol,0)
log(16000)
